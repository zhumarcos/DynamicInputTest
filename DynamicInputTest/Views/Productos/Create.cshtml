@model DynamicInputTest.Models.ViewModels.CrearProducto

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Producto</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" id="form">            
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Nombre" class="control-label"></label>
                <input asp-for="Nombre" class="form-control" />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>
            <div id="AcondicionadoresContainer">
                @Html.EditorFor(Model => Model.Acondicionadores)
            </div>
            <div class="row mt-3">
                <div class="col-md-4">
                    <input class="btn btn-primary" type="button" id="btnAdd" value="Agregar acondicionador" />
                </div>
            </div>
            <div class="form-group mt-3">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        <script type="text/javascript">
            $("#btnAdd").on('click', function () {
                $.ajax({
                    async: true,
                    data: $('#form').serialize(),
                    type: "POST",
                    url: '/Productos/AgregarAcondicionador',
                    success: function (partialView) {
                        console.log("partialView: " + partialView);
                        $('#AcondicionadoresContainer').html(partialView);
                    }
                });
            });
        </script>
    }
}
